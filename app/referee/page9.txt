"use client";

import { useEffect, useState } from "react";

interface RefereeData {
  refereeId: string;
  referrerId: string;
}

interface ReferrerData {
  referrerId: string;
  name?: string;
  email?: string;
  tokenId?: string;
}

export default function RefereePage() {
  const [referees, setReferees] = useState<RefereeData[] | null>(null);
  const [referrers, setReferrers] = useState<ReferrerData[] | null>(null);
  const [loading, setLoading] = useState(true);
  const [referrerId, setReferrerId] = useState("");

  const refereesUrl = "https://raw.githubusercontent.com/eastern-cyber/dproject-11/main/public/referees.json";
  const referrersUrl = "https://raw.githubusercontent.com/eastern-cyber/dproject-11/main/public/referrers.json";

  useEffect(() => {
    Promise.all([
      fetch(refereesUrl).then((res) => res.json()),
      fetch(referrersUrl).then((res) => res.json())
    ])
      .then(([refereesData, referrersData]) => {
        setReferees(refereesData);
        setReferrers(referrersData);
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error loading JSON:", err);
        setLoading(false);
      });
  }, []);

  if (loading) {
    return <div className="p-6">Loading...</div>;
  }

  if (!referees || !referrers) {
    return <div className="p-6 text-red-600">Failed to load data.</div>;
  }

  // Step 1: Find all refereeIds for the entered referrerId
  const matchingReferees = referees.filter((item) => item.referrerId === referrerId);
  const matchingRefereeIds = matchingReferees.map(item => item.refereeId);

  // Step 2: Find all referrer records where referrerId matches refereeId
  const matchingReferrerRecords = referrers.filter((item) => matchingRefereeIds.includes(item.referrerId));

  return (
    <div className="p-6 bg-gray-900 text-white min-h-screen">
      <h1 className="text-xl font-bold">ตรวจสอบรายชื่อผู้ที่ท่านแนะนำ (Referee Lookup)</h1>      
      <h2 className="text-xl font-bold">ใส่เลขกระเป๋าของเท่าน</h2>
      <input
        type="text"
        placeholder="Enter Referrer ID"
        value={referrerId}
        onChange={(e) => setReferrerId(e.target.value)}
        className="border border-gray-400 p-2 rounded mt-4 w-full bg-gray-800 text-white"
      />

      <h2 className="text-lg font-semibold mt-4">Matching Referees (รายการผู้ที่ท่านแนะนำ)</h2>
      {matchingReferrerRecords.length > 0 ? (
        <table className="table-auto border-collapse border border-gray-500 mt-4 w-full">
          <thead>
            <tr>
              <th className="border border-gray-400 px-4 py-2">ผู้ที่ท่านแนะนำ</th>
              <th className="border border-gray-400 px-4 py-2">ชื่อ</th>
              <th className="border border-gray-400 px-4 py-2">อีเมล</th>
              <th className="border border-gray-400 px-4 py-2">Token ID</th>
            </tr>
          </thead>
          <tbody>
            {matchingReferrerRecords.map((item) => (
              <tr key={item.referrerId}>
                <td className="border border-gray-400 px-4 py-2">{item.referrerId.slice(0, 6)}...{item.referrerId.slice(-4)}</td>
                <td className="border border-gray-400 px-4 py-2">{item.name || "N/A"}</td>
                <td className="border border-gray-400 px-4 py-2">{item.email || "N/A"}</td>
                <td className="border border-gray-400 px-4 py-2">{item.tokenId || "N/A"}</td>
              </tr>
            ))}
          </tbody>
        </table>
      ) : (
        <p className="mt-2 text-gray-400">No referees found for this referrer ID.</p>
      )}
    </div>
  );
}